name: Build and deploy docker image

on:
  workflow_dispatch:
  push:
    # Pattern matched against refs/tags
    tags:
      - "*"
    inputs:
      cache-type:
        type: string
        required: false
        default: gha
        description: buildx cache type [registry | gha]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - {
              target: "x86_64-unknown-linux-gnu",
              os: ubuntu-latest,
              platform: linux/amd64,
            }
          - {
              target: "aarch64-unknown-linux-gnu",
              os: ubuntu-latest,
              platform: linux/arm64,
            }
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            hhakkaev/rust-docker-demo
            ghcr.io/hasanhakkaev/rust-docker-demo
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHUB_TOKEN }}

      - name: Build and push image with build args to container registry using gha cache
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: TARGET=${{ matrix.target }}
